git log : 지금까지 만든 커밋을 확인합니다.

git checkout <앞 7자리 커밋 아이디> : 해당 커밋 아이디 시점으로 돌아갑니다. 
                                 이때 파일 내용도 돌아갑니다. 

clone : 원격 저장소의 코드와 버전 전체를 내 컴퓨터로 내려받습니다.

git clone <원격 저장소 주소> . : 현재 폴더에 clone 명령을 합니다. .이 없으면 새로운 폴더에
                            clone을 받습니다.

Git 파일 4가지 상태: untracked, staged, unmodified, modified
                untracked는 새로 만든 파일이 add되지 않은 상태입니다.
                staged는 새로 만든 파일이나 수정된 파일이 add된 상태입니다.
                unmodified는 staged된 파일이 commit된 상태입니다 
                modified는 commit된 파일이 수정된 상태입니다. (add되기 전입니다.)

브랜치 사용법: 1.협업자는 커밋을 올릴 브랜치를 각각 만들고
            2.자신이 만든 브랜치로 이동한 다음
            3.브랜치에 커밋을 올리고
            4.코딩이 완료되면 브랜치를 합칩니다.

브랜치를 만들 때: 현재 브랜치가 master임을 확인해 주세요. 이 브랜치가 가르키는 커밋을
                기준으로 새로운 브랜치를 만듭니다.

브랜치 이동하기: checkout

브랜치 합치기: 병합(merge)

브랜치를 기준으로 병합: [master]브랜치를 기준으로 병합한다는 것은 합친 결과물을 
                [master] 브랜치에 반영한다는 것입니다.

병합 커밋 및 충돌 해결: 병합 커밋을 만들다가 충돌이 날 가능성이 있기 때문에
                 같이 쓰는 [master] 브랜치에 바로 병합하지 않고 나만 쓰는
                 브랜치에 먼저 병합해 보고 문제가 없는지 확인합니다.
                 문제가 없다면 [master] 브랜치에 반영합니다.
                 충돌이 난다면 코드를 직접 수정해줘서 충돌을 해결합니다.
                 충돌을 해결한 뒤 다시 add와 commit을 거쳐 병합 커밋을 만듭니다.

브랜치를 합치는 예의바른 방법: 풀 리퀘스트를 사용해 브랜치를 병합해도 될지 요청하는
                        메시지를 보냅니다.

특정 커밋에 포스트잇 붙이기 - 태그: 태그는 포인터입니다. 버전을 표시할 때 사용합니다.

원본저장소를 자신의 계정에 복사해 원격저장소 만들기- fork

fork vs branch: 브랜치는 원본저장소 내에서 평행세계를 만드는 것이라면 
                포크는 평행우주를 만든다고 볼 수 있습니다.
